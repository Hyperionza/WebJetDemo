name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Allows manual triggering from any branch

jobs:
  test-backend:
    name: Test Backend (.NET)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
    
    - name: Restore dependencies
      run: dotnet restore
      working-directory: ./MoviePriceComparison
    
    - name: Build
      run: dotnet build --no-restore --configuration Release
      working-directory: ./MoviePriceComparison
    
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      working-directory: ./MoviePriceComparison.Tests
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./MoviePriceComparison.Tests/TestResults
        flags: backend

  test-frontend:
    name: Test Frontend (React)
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./movie-price-frontend
    
    - name: Lint
      run: npm run lint
      working-directory: ./movie-price-frontend
    
    - name: Build
      run: npm run build
      working-directory: ./movie-price-frontend
    
    - name: Test
      run: npm test -- --coverage --watchAll=false
      working-directory: ./movie-price-frontend
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        directory: ./movie-price-frontend/coverage
        flags: frontend

  build-backend:
    name: Build Backend Docker Image
    runs-on: ubuntu-latest
    needs: test-backend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: ./MoviePriceComparison
        push: false
        tags: movie-price-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: test-frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      working-directory: ./movie-price-frontend
    
    - name: Build for production
      run: npm run build
      working-directory: ./movie-price-frontend
      env:
        CI: false # Treat warnings as warnings, not errors
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: ./movie-price-frontend/build/
        retention-days: 7

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [test-backend, test-frontend, build-backend, build-frontend, security-scan]
    
    steps:
    - name: Quality Gate Passed
      run: echo "All quality checks passed successfully!"
